# Template de Wake-up Agent Standard ARKA_OS
# À utiliser pour tous les agents pour assurer la cohérence

id: ARKAA08-WAKEUP-{AGENT_NAME}
version: 1.0.0
agent_id: arka-agent-{id}-{agent-name}

# === RÉFÉRENCES OBLIGATOIRES ===
# Ne jamais dupliquer les valeurs, toujours référencer

# Profil et capacités
use_profile_ref: ARKPR08-PROFILES-CATALOG:profiles.{profile-name}
capabilities_ref: client/acme/ARKAA19-AGENT-CAPABILITIES.yaml#agents.{agent-name}
keys_catalog_ref: ARKORE11-KEYS-ANNUAIRE:keys

# Contexte projet centralisé (OBLIGATOIRE)
project_context_ref: ARKAA21-PROJECT-CONTEXT:vars

# Règles et politiques
rules_version_ref: ARKPR20-WAKEUP-POLICIES:exports.rules_version
rules_index_ref: ARKPR20-WAKEUP-POLICIES:exports.rules_index_ref
guardrails_ref: ARKPR20-WAKEUP-POLICIES:exports.guardrails

# === CONFIGURATION AGENT ===

# Mémoire locale
memory:
  dir: ARKA_META/.system/.mem/{agent-name}/
  index: ARKA_META/.system/.mem/{agent-name}/index.json
  
# Intentions disponibles
available_intents:
  - {PRIMARY_INTENT}      # Intent principal de l'agent
  - WORKFLOW_PLAN         # Commun à tous
  - REVIEW_DELIVERABLE    # Commun à tous
  
# Intents communs hérités
include_common_intents_ref: ARKPR20-WAKEUP-POLICIES:exports.intents_common

# Mode de démarrage
startup:
  sequence: [resolve_profile, mount_memory, load_capabilities, load_keys_catalog]
  default_intent: {PRIMARY_INTENT}

# === CONTEXTE DOCUMENTAIRE ===
# Références vers les documents du projet

context:
  # Documents principaux (depuis PROJECT_CONTEXT)
  docs_ref:
    vision_produit:   ARKAA21-PROJECT-CONTEXT:vars.docs.vision_produit
    roadmap:          ARKAA21-PROJECT-CONTEXT:vars.docs.roadmap
    vision_slice:     ARKAA21-PROJECT-CONTEXT:vars.docs.vision_slice_template
    pitch_deck:       ARKAA21-PROJECT-CONTEXT:vars.docs.pitch_deck
    plan_directeur:   ARKAA21-PROJECT-CONTEXT:vars.docs.plan_directeur
    
  # Règles et gouvernance
  governance_ref:     ARKAA21-PROJECT-CONTEXT:vars.governance
  dor_dod_ref:        ARKAA21-PROJECT-CONTEXT:vars.dor_dod
  language_tone_ref:  ARKAA21-PROJECT-CONTEXT:vars.language_tone
  workflow_canvas_ref: ARKAA21-PROJECT-CONTEXT:vars.workflow_canvas
  
  # Providers et configuration
  providers:
    chat_multi_provider_ref: ARKAA21-PROJECT-CONTEXT:vars.providers.chat_multi_provider
    must_log_provider_ref:   ARKAA21-PROJECT-CONTEXT:vars.providers.must_log_provider

# === SPÉCIALISATIONS (optionnel) ===
# Ajouter ici les configurations spécifiques à l'agent

specializations:
  # Exemple pour un agent de test
  test_config_ref?: client/acme/test-configs/{agent-name}.yaml
  
  # Exemple pour un agent avec accès externe
  external_apis_ref?: client/acme/apis/{agent-name}-apis.yaml
  
  # Exemple pour un agent avec templates spécifiques
  custom_templates_ref?: client/acme/templates/{agent-name}/

# === DÉLÉGATION (optionnel) ===
# Pour les agents orchestrateurs (PMO, AGP)

delegation:
  mode: subtasks_only    # ou direct_communication
  allowed_agents: []     # Liste des agents délégables
  max_parallel: 4        # Nombre max d'agents en parallèle
  
# === ESCALADE (optionnel) ===
# Politique d'escalade spécifique

escalation:
  policy: standard       # ou critical, relaxed
  escalate_to: [agp, owner]
  conditions:
    - max_reworks_exceeded
    - critical_error
    - owner_request

# === CONTRATS ===
# Invariants à respecter

contracts:
  invariants:
    - resolves(use_profile_ref)
    - resolves(capabilities_ref)
    - resolves(keys_catalog_ref)
    - resolves(project_context_ref)
    - "available_intents not empty"
    - "memory.dir matches agent_id pattern"