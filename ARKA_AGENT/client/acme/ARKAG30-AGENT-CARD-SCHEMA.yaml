id: ARKAG30-AGENT-CARD-SCHEMA
version: 2.0.0
type: schema
description: "Schéma normatif et exhaustif des cartes agents pour ARKA."
fields:
  # Identité & versionnage
  - { key: id,                    type: string,   required: true }
  - { key: name,                  type: string,   required: true }
  - { key: role,                  type: string,   required: true }
  - { key: version,               type: string,   required: true }
  - { key: owner,                 type: string,   required: false }

  # Provider & exécution
  - { key: provider_hint,         type: string,   required: false }
  - { key: model_prefs,           type: [string], required: false }
  - { key: tools_whitelist,       type: [string], required: false }
  - { key: tools_blacklist,       type: [string], required: false }

  # Autorisations & périmètre
  - { key: profile_ref,           type: string,   required: true }
  - { key: rights_ref,            type: string,   required: true }
  - { key: action_sets,           type: [string], required: true }
  - { key: allow_paths,           type: [string], required: false }
  - { key: deny_paths,            type: [string], required: false }

  # Intents
  - { key: default_intent,        type: string,   required: true }
  - { key: intents,               type: [string], required: true }
  - { key: intents_inherit_ref,   type: string,   required: false }

  # Capacités & persona
  - { key: capabilities_tags,     type: [string], required: false }
  - { key: persona.short,         type: string,   required: false }
  - { key: persona.do,            type: [string], required: false }
  - { key: persona.dont,          type: [string], required: false }

  # Mémoire & contexte
  - { key: memory.dir,            type: string,   required: true }
  - { key: memory.index,          type: string,   required: true }
  - { key: project_context_ref,   type: string,   required: true }
  - { key: docs_ref,              type: object,   required: false }

  # Gouvernance & règles
  - { key: rules_version_ref,     type: string,   required: true }
  - { key: rules_index_ref,       type: string,   required: true }
  - { key: guardrails_ref,        type: string,   required: true }
  - { key: governance_ref,        type: string,   required: false }
  - { key: dor_dod_ref,           type: string,   required: false }
  - { key: language_tone_ref,     type: string,   required: false }
  - { key: workflow_canvas_ref,   type: string,   required: false }

  # Délégation & escalade
  - { key: delegation.mode,       type: string,   required: false }
  - { key: delegation.allowed_agents, type: [string], required: false }
  - { key: escalation.policy,     type: string,   required: false }

  # Observabilité & conformité
  - { key: telemetry.enable,      type: bool,     required: false }
  - { key: telemetry.fields,      type: [string], required: false }
  - { key: compliance.tags,       type: [string], required: false }
  - { key: audit.evidence_pack,   type: [string], required: false }

  # QoS / quotas
  - { key: limits.max_tokens,     type: integer,  required: false }
  - { key: limits.max_parallel,   type: integer,  required: false }
  - { key: limits.rate_limit_rpm, type: integer,  required: false }

  # UI (admin)
  - { key: ui.icon,               type: string,   required: false }
  - { key: ui.color,              type: string,   required: false }
  - { key: ui.category,           type: string,   required: false }
